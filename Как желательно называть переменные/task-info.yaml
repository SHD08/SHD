type: edu
files:
  - name: task.py
    visible: true
    placeholders:
      - offset: 107
        length: 45
        placeholder_text: '# TODO Запишите количество секунд в одном дне'
        initial_state:
          length: 45
          offset: 107
        initialized_from_dependency: false
        selected: false
        status: Unchecked
        encrypted_possible_answer: "SECONDS_IN_DAY = 24 * 60 * 60  # количество секунд\
      \ в дне"
      - offset: 327
        length: 49
        placeholder_text: '# TODO Посчитайте количество секунд в десяти днях'
        initial_state:
          length: 49
          offset: 327
        initialized_from_dependency: false
        selected: false
        status: Unchecked
        encrypted_possible_answer: "total_seconds_in_ten_days = 10 * SECONDS_IN_DAY  #\
      \ количество секунд в десяти днях"
      - offset: 521
        length: 51
        placeholder_text: '# TODO Распечатайте количество секунд в десяти днях'
        initial_state:
          length: 51
          offset: 521
        initialized_from_dependency: false
        selected: false
        status: Unchecked
        encrypted_possible_answer: "print(\"Количество секунд в десяти днях:\", total_seconds_in_ten_days)"
    text: |
      SECONDS_IN_MINUTE = 60  # количество секунд в минуте
      SECONDS_IN_HOUR = 60 * 60  # количество секунд в часе
      # TODO Запишите количество секунд в одном дне
      
      total_seconds_in_two_minutes = 2 * SECONDS_IN_MINUTE  # количество секунд в двух минутах
      total_seconds_in_five_hours = 5 * SECONDS_IN_HOUR  # количество секунд в пяти часах
      # TODO Посчитайте количество секунд в десяти днях
      
      print("Количество секунд в двух минутах:", total_seconds_in_two_minutes)
      print("Количество секунд в пяти часах:", total_seconds_in_five_hours)
      # TODO Распечатайте количество секунд в десяти днях
    learner_created: false
  - name: tests/test_task.py
    visible: false
    text: |
      import unittest
      
      import task
      
      
      class TestCase(unittest.TestCase):
          def test_seconds_in_day(self):
              assert hasattr(task, 'SECONDS_IN_DAY'), (
                  'Убедитесь, что название константы с количеством секунд в одном дне записано согласно заданию.'
              )
              expected = 24 * 60 * 60
              assert task.SECONDS_IN_DAY == expected, (
                  'Убедитесь, что количество секунд в одном дне, посчитано верно.'
              )
      
          def test_total_seconds_in_ten_days(self):
              assert hasattr(task, 'total_seconds_in_ten_days'), (
                  'Убедитесь, что название переменной с количеством секунд в десяти днях записано согласно заданию.'
              )
              seconds_in_day = 24 * 60 * 60
              count_days = 10
              expected = count_days * seconds_in_day
              assert task.total_seconds_in_ten_days == expected, (
                  'Убедитесь, что выражение, которое считает количество секунд в десяти днях, записано верно.'
              )
    learner_created: false
  - name: __init__.py
    visible: false
    learner_created: false
  - name: tests/__init__.py
    visible: false
    learner_created: false
status: Unchecked
record: -1
